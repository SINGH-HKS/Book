[{"/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/books.js":"1","/Users/hiteshkumarsingh/Desktop/bookrepo/src/App.js":"2","/Users/hiteshkumarsingh/Desktop/bookrepo/src/reportWebVitals.js":"3","/Users/hiteshkumarsingh/Desktop/bookrepo/src/index.js":"4","/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/checkout.js":"5","/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/payment.js":"6"},{"size":12108,"mtime":1611559568482,"results":"7","hashOfConfig":"8"},{"size":3323,"mtime":1611566775971,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611299807220,"results":"10","hashOfConfig":"8"},{"size":543,"mtime":1611301210360,"results":"11","hashOfConfig":"8"},{"size":4984,"mtime":1611567447651,"results":"12","hashOfConfig":"8"},{"size":239,"mtime":1611514806041,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"14p4d29",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/books.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48"],"import React, { Component } from 'react';\nimport ReactStars from \"react-rating-stars-component\";\nimport \"../App.css\";\nimport axios from 'axios'\n\n\nconst url = \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json\"\nclass books extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchText: this.props.searchText,\n            books: [],\n            sortType: this.props.sortType,\n            bookID: \"visible\",\n            title: \"visible\",\n            average_rating: \"visible\",\n            isbn: \"visible\",\n            language_code: \"visible\",\n            price: \"visible\",\n            ratings_count: \"visible\",\n            title: \"visible\",\n            authors: \"visible\",\n            cart: []\n\n        }\n\n    }\n\n    componentDidMount() {\n\n        axios.get(url)\n            .then(response => {\n                this.setState({ books: response.data })\n            }).catch(error => {\n                if (error.response) {\n                    this.setState({ errorMessage: error.response.data.message })\n                }\n                else {\n                    this.setState({ errorMessage: \"Server error\" })\n                }\n            })\n    }\n\n    addtocart = (id) => {\n        var item = this.state.cart\n        var added = false\n        this.state.cart.map(singleitem => {\n            if (singleitem.bookID === id.bookID) {\n                alert('Item is already added into the cart')\n                added = true\n            }\n\n        })\n        if (added == true) {\n            console.log('true')\n            return\n        }\n        else {\n            item.push(id)\n            console.log('item added', item)\n            this.props.addcart(this.state.cart)\n            return this.setState({ cart: item })\n\n        }\n\n\n    }\n\n    displaybooks = () => {\n        return (\n            <div>\n                <div class='checkboxes'>\n                <div className=\"form-check form-check-inline\" >\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.bookID == \"visible\") {\n                            this.setState({ bookID: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ bookID: \"visible\" })\n                        }\n                    }} />Book ID</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.title == \"visible\") {\n                            this.setState({ title: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ title: \"visible\" })\n                        }\n                    }} />Title</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.authors == \"visible\") {\n                            this.setState({ authors: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ authors: \"visible\" })\n                        }\n                    }} />Authors</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.isbn == \"visible\") {\n                            this.setState({ isbn: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ isbn: \"visible\" })\n                        }\n                    }} />ISBN</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.language_code == \"visible\") {\n                            this.setState({ language_code: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ language_code: \"visible\" })\n                        }\n                    }} />Language</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.price == \"visible\") {\n                            this.setState({ price: \"hidden\" })\n\n                        }\n                        else {\n                            this.setState({ price: \"visible\" })\n                        }\n                    }} />Price</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.average_rating == \"visible\") {\n                            this.setState({ average_rating: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ average_rating: \"visible\" })\n                        }\n                    }} />Rating</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <label className='form-check-label'>\n                        <input class='form-check-input' defaultChecked={true} type=\"checkbox\" onChange={() => {\n                        if (this.state.ratings_count == \"visible\") {\n                            this.setState({ ratings_count: \"hidden\" })\n                        }\n                        else {\n                            this.setState({ ratings_count: \"visible\" })\n                        }\n                    }} />Rating Count</label>\n                </div>\n                </div>\n                <div className=\"container-fluid\" style={{ paddingTop: \"50\" }}>\n                    <table className={'table-hover'} style={{ width: \"100%\", height: '100%', left: '0', overflow: 'hidden', position: 'absolute' }}>\n                        <thead >\n                            <tr >\n                                <th scope=\"col\" style={{ visibility: (this.state.bookID) }}>Book ID</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.title) }}>Title</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.authors) }}>Authors</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.isbn) }}>ISBN</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.language_code) }}>Language</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.price) }}>Price</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.average_rating) }}>Average Rating</th>\n                                <th scope=\"col\" style={{ visibility: (this.state.ratings_count) }}>Ratings Count</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {this.state.books.filter((id) => {\n                                if (id.title && typeof (id.title) == 'string' && id.authors && typeof (id.authors) == 'string' && id.bookID && typeof (id.bookID) == 'number') {\n                                    if (id.title.toLowerCase().includes(this.props.searchText.toLowerCase()) || id.authors.toLowerCase().includes(this.props.searchText.toLowerCase()) || id.bookID == (Number(this.props.searchText))) {\n\n                                        return id\n                                    }\n                                }\n                            }\n                            ).sort((a, b) => {\n                                if (this.props.sortType == 'Rating')\n                                    return (b.average_rating - a.average_rating)\n                                else return a.bookID - b.bookID\n                            }).map((id, index) => {\n\n                                var rows = []\n                                var rating = Math.round(id.average_rating)\n                                if (rating == '1') {\n                                    rows = ['⭐']\n                                }\n                                else if (rating == '2') {\n                                    rows = ['⭐⭐']\n\n                                }\n                                else if (rating == '3') {\n                                    rows = ['⭐⭐⭐']\n\n                                }\n                                else if (rating == '4') {\n                                    rows = ['⭐⭐⭐⭐']\n\n                                }\n\n                                else if (rating == '5') {\n                                    rows = ['⭐⭐⭐⭐⭐']\n\n                                }\n\n                                // for(var i = 1; i <Math.round(id.average_rating);i++){\n                                //     rows.push(\"⭐\")\n                                // }\n                                return (\n                                    <tr>\n                                        <td style={{ visibility: (this.state.bookID), textAlign: 'center' }}>{id.bookID}</td>\n                                        <td style={{ visibility: (this.state.title) }}>{id.title}</td>\n                                        <td style={{ visibility: (this.state.authors) }}>{id.authors}</td>\n                                        <td style={{ visibility: (this.state.isbn), textAlign: 'center' }}>{id.isbn}</td>\n                                        <td style={{ visibility: (this.state.language_code), textAlign: 'center' }}>{id.language_code}</td>\n                                        <td style={{ visibility: (this.state.price), textAlign: 'center' }}>\n                                            <div>₹{id.price}</div><span><button onClick={() => { this.addtocart(id) }}><img src='https://cdn1.iconfinder.com/data/icons/shopping-e-commerce-part-1/33/add_cart-512.png' width='25' height='25' /></button></span>\n                                        </td>\n                                        <td style={{ visibility: (this.state.average_rating), textAlign: 'center' }}>\n                                            {/* <ReactStars\n                                count={5}\n                                value={id.average_rating}\n                                size={10}\n                                edit={false}\n                                activeColor=\"#ffd700\"/>  */}\n                                            {rows}{<div>{id.average_rating}</div>}</td>\n                                        <td style={{ visibility: (this.state.ratings_count), textAlign: 'center' }}>{id.ratings_count}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                            }\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        if (this.state.books != null) {\n            return (\n                <div>\n\n                    {this.displaybooks()}\n\n                </div>\n            )\n        }\n        return\n\n    }\n}\nexport default books;",["49","50"],"/Users/hiteshkumarsingh/Desktop/bookrepo/src/App.js",["51","52","53"],"/Users/hiteshkumarsingh/Desktop/bookrepo/src/reportWebVitals.js",[],"/Users/hiteshkumarsingh/Desktop/bookrepo/src/index.js",[],"/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/checkout.js",["54","55","56","57","58","59","60","61"],"/Users/hiteshkumarsingh/Desktop/bookrepo/src/components/payment.js",[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":22,"column":13,"nodeType":"68","messageId":"69","endLine":22,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":48,"column":40,"nodeType":"72","messageId":"73","endLine":48,"endColumn":42},{"ruleId":"74","severity":1,"message":"75","line":55,"column":19,"nodeType":"76","messageId":"69","endLine":55,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":77,"column":47,"nodeType":"76","messageId":"69","endLine":77,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":88,"column":46,"nodeType":"76","messageId":"69","endLine":88,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":99,"column":48,"nodeType":"76","messageId":"69","endLine":99,"endColumn":50},{"ruleId":"74","severity":1,"message":"75","line":110,"column":45,"nodeType":"76","messageId":"69","endLine":110,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":121,"column":54,"nodeType":"76","messageId":"69","endLine":121,"endColumn":56},{"ruleId":"74","severity":1,"message":"75","line":132,"column":46,"nodeType":"76","messageId":"69","endLine":132,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":144,"column":55,"nodeType":"76","messageId":"69","endLine":144,"endColumn":57},{"ruleId":"74","severity":1,"message":"75","line":155,"column":54,"nodeType":"76","messageId":"69","endLine":155,"endColumn":56},{"ruleId":"70","severity":1,"message":"77","line":180,"column":59,"nodeType":"72","messageId":"78","endLine":180,"endColumn":61},{"ruleId":"74","severity":1,"message":"75","line":182,"column":197,"nodeType":"76","messageId":"69","endLine":182,"endColumn":199},{"ruleId":"74","severity":1,"message":"75","line":189,"column":57,"nodeType":"76","messageId":"69","endLine":189,"endColumn":59},{"ruleId":"74","severity":1,"message":"75","line":196,"column":44,"nodeType":"76","messageId":"69","endLine":196,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":199,"column":49,"nodeType":"76","messageId":"69","endLine":199,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":203,"column":49,"nodeType":"76","messageId":"69","endLine":203,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":207,"column":49,"nodeType":"76","messageId":"69","endLine":207,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":212,"column":49,"nodeType":"76","messageId":"69","endLine":212,"endColumn":51},{"ruleId":"79","severity":1,"message":"80","line":228,"column":120,"nodeType":"81","endLine":228,"endColumn":242},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"74","severity":1,"message":"75","line":61,"column":32,"nodeType":"76","messageId":"69","endLine":61,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":64,"column":9,"nodeType":"81","endLine":64,"endColumn":46},{"ruleId":"79","severity":1,"message":"80","line":79,"column":64,"nodeType":"81","endLine":79,"endColumn":199},{"ruleId":"62","severity":1,"message":"88","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"89","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":17},{"ruleId":"62","severity":1,"message":"90","line":4,"column":25,"nodeType":"64","messageId":"65","endLine":4,"endColumn":30},{"ruleId":"62","severity":1,"message":"91","line":4,"column":32,"nodeType":"64","messageId":"65","endLine":4,"endColumn":38},{"ruleId":"62","severity":1,"message":"92","line":4,"column":40,"nodeType":"64","messageId":"65","endLine":4,"endColumn":48},{"ruleId":"74","severity":1,"message":"93","line":32,"column":76,"nodeType":"76","messageId":"69","endLine":32,"endColumn":78},{"ruleId":"74","severity":1,"message":"75","line":40,"column":32,"nodeType":"76","messageId":"69","endLine":40,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":43,"column":38,"nodeType":"76","messageId":"69","endLine":43,"endColumn":40},"no-unused-vars","'ReactStars' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'PropTypes' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]